apiVersion: apps/v1
kind: Deployment
metadata:
  name: laos-client-api
  labels:
    app.kubernetes.io/app: laos-client-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: laos-client-api
  template:
    metadata:
      labels:
        app.kubernetes.io/app: laos-client-api
    spec:
      containers:
        - name: laos-client-api
          image: freeverseio/laos-client-api:{{ .Values.imageTag }}
          imagePullPolicy: Always
          volumeMounts:
            - name: db-certificate
              mountPath: "/app/data"
              readOnly: true
            - name: supported-chains
              mountPath: "/app/supported-chains/"
              readOnly: true
          resources:
            requests:
              memory: '256Mi'
              cpu: '1'
            limits:
              memory: '512Mi'
              cpu: '2'
          env:  
            - name: ROOT_DIR
              value: "/app"
            - name: GQL_PORT
              value: "4001"
            - name: MINTER_PVK
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: minterPvk
            - name: PINATA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: pinataApiKey
            - name: PINATA_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: pinataApiSecret
            - name: MINTER_KEYS
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: clientApiMinterKeys
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: postgresPassword
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgresUser }}:$(POSTGRES_PASSWORD)@{{.Values.postgresHost}}:{{.Values.postgresPort}}/{{.Values.postgresDb}}?sslmode=require&sslrootcert=./data/ca-certificate.pem"            
            - name: API_RPC_ETHEREUM
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: apiRpcEthereum
            - name: API_RPC_POLYGON
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: apiRpcPolygon
            {{- $secret := lookup "v1" "Secret" .Release.Namespace "indexers-private-config" }}
            {{- if and $secret (hasKey $secret.data "apiRpcHederaMainnet") }}
            - name: API_RPC_HEDERA_MAINNET
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: apiRpcHederaMainnet
            {{- end }}
            {{- if and $secret (hasKey $secret.data "apiRpcHederaTestnet") }}
            - name: API_RPC_HEDERA_TESTNET
              valueFrom:
                secretKeyRef:
                  name: indexers-private-config
                  key: apiRpcHederaTestnet
            {{- end }}
            - name: REMOTE_SCHEMA
              value: {{ .Values.indexerSchemaUrl }}
          ports:
            - containerPort: 4001
      volumes:
        - name: db-certificate
          secret:
            secretName: db-cert
        - name: supported-chains
          configMap:
            name: supported-chains