version: 2.1

orbs:
  kube-orb: circleci/kubernetes@1.3.1
  helm: circleci/helm@3.0.2

parameters:
  imageTag:
    type: string
    default: latest
commands:
  install-helmfile:
    description: Install helmfile
    steps:
      - run:
          name: Install helmfile
          command: ./_circleci-scripts/install-helmfile.sh


jobs:
  deploy_to_cluster:
    parameters:
      environment:
        type: string
        default: development
      root:
        type: string
      imageTag:
        type: string
    description: Deploy to << parameters.environment >> environment
    docker:
      - image: cimg/deploy:2023.09
    steps:
      - checkout
      - kube-orb/install-kubectl:
          kubectl-version: 'v1.25.14'
      - when:
          condition:
            equal: [ development, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_DATA
      - when:
          condition:
            equal: [ staging, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_PROTOSTAR_STG_DATA
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Deploy to << parameters.environment >> environment
          command: |
            echo "Deploying to << parameters.environment >> environment"
            git clone --no-checkout git@github.com:freeverseio/laos-api.git
            cd laos-api
            if [ "<< parameters.imageTag >>" = "latest" ]; then
              IMAGE_TAG=$(git rev-parse HEAD)
            fi
            echo "Fetching image tag $IMAGE_TAG"
            git fetch origin $IMAGE_TAG
            git checkout $IMAGE_TAG
            echo "Using IMAGE_TAG=$IMAGE_TAG"
            cd ..
            cd << parameters.root >>
            helmfile sync --environment << parameters.environment >>

  deployment-test:
    parameters:
      root:
        type: string
      imageTag:
        type: string
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Test Helmfile
          command: |
            echo "Helmfile tests passing"
            export IMAGE_TAG=<< parameters.imageTag >>
            git clone --no-checkout git@github.com:freeverseio/laos-api.git
            cd laos-api
            if [ "<< parameters.imageTag >>" = "latest" ]; then
              IMAGE_TAG=$(git rev-parse HEAD)
            fi
            echo "Fetching image tag $IMAGE_TAG"
            git fetch origin $IMAGE_TAG
            git checkout $IMAGE_TAG
            echo "Using IMAGE_TAG=$IMAGE_TAG"
            cd ..
            cd << parameters.root >>
            helmfile lint
            echo "Deployment tests passed for battle-of-chains commit $IMAGE_TAG"




workflows:
  ci-workflow:
    jobs:

      - deployment-test:
          name: deployment-test-laos-node
          root: laos-node
          imageTag: << pipeline.parameters.imageTag >>

      - deployment-test:
          name: deployment-test-indexer
          root: indexer
          imageTag: << pipeline.parameters.imageTag >>

      - approval:
          type: approval
          name: approve-deploy-client-api
          requires:
            - deployment-test
            - build-client-api
            - build-api-gateway
            - build-playground
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: approve-deploy-client-api-staging
          requires:
            - deployment-test
            - build-client-api
            - build-api-gateway
            - build-playground
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: approve-deploy-indexer
          requires:
            - deployment-test-indexer
            - build-indexer
          filters:
            branches:
              only:
                - main
      
      - approval:
          type: approval
          name: approve-deploy-indexer-staging
          requires:
            - deployment-test-indexer
            - build-indexer
          filters:
            branches:
              only:
                - main

      - deploy_to_cluster:
          name: deploy-to-dev-api
          requires:
            - deployment-test
            - approve-deploy-client-api
          environment: development
          root: _deployment
          imageTag: << pipeline.parameters.imageTag >>
          filters:
            branches:
              only:
                - main

      - deploy_to_cluster:
          name: deploy-to-dev-indexer
          requires:
            - deployment-test-indexer
            - approve-deploy-indexer
          environment: development
          root: _deployment/indexer
          imageTag: << pipeline.parameters.imageTag >>
          filters:
            branches:
              only:
                - main

      - deploy_to_cluster:
          name: deploy-to-staging-api
          requires:
            - deployment-test
            - approve-deploy-client-api-staging
          environment: staging
          root: _deployment
          imageTag: << pipeline.parameters.imageTag >>
          filters:
            branches:
              only:
                - main

      - deploy_to_cluster:
          name: deploy-to-staging-indexer
          requires:
            - deployment-test-indexer
            - approve-deploy-indexer-staging
          environment: staging
          root: _deployment/indexer
          imageTag: << pipeline.parameters.imageTag >>
          filters:
            branches:
              only:
                - main
