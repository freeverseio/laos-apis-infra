version: 2.1

orbs:
  kube-orb: circleci/kubernetes@1.3.1
  helm: circleci/helm@3.0.2

parameters:
  imageTag:
    type: string
    default: latest

commands:
  install-helmfile:
    description: Install helmfile
    steps:
      - run:
          name: Install helmfile
          command: ./circleci-scripts/install-helmfile.sh

  checkout-app:
    description: Checkout app
    steps:
      - run:
          name: Checkout API
          command: |
            git clone git@github.com:freeverseio/laos-apis.git
            cd laos-apis
            git checkout

  dockerize-and-push:
    parameters:
      image:
        type: string
      root:
        type: string
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Docker login
          command: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run:
          name: Build and push Docker image
          command: |
            cd laos-apis
            cd << parameters.root >>
            echo "Docker images for $CIRCLE_SHA1 will be pushed"
            docker build -t << parameters.image >>:$CIRCLE_SHA1 .
            docker push << parameters.image >>:$CIRCLE_SHA1

jobs:
  build-app:
    parameters:
      image:
        type: string
      root:
        type: string
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout-app
      - dockerize-and-push:
          image: << parameters.image >>
          root: << parameters.root >>

  deploy_to_cluster:
    parameters:
      environment:
        type: string
        default: development
      root:
        type: string
      imageTag:
        type: string
    description: Deploy to << parameters.environment >> environment
    docker:
      - image: cimg/deploy:2023.09
    steps:
      - checkout
      - kube-orb/install-kubectl:
          kubectl-version: 'v1.25.14'
      - when:
          condition:
            equal: [ development, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_DATA
      - when:
          condition:
            equal: [ staging, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_PROTOSTAR_STG_DATA
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Deploy to << parameters.environment >> environment
          command: |
            echo "Deploying to << parameters.environment >> environment"
            git clone --no-checkout git@github.com:freeverseio/laos-apis.git
            cd laos-apis
            if [ "<< parameters.imageTag >>" = "latest" ]; then
              IMAGE_TAG=$(git rev-parse HEAD)
            fi
            echo "Fetching image tag $IMAGE_TAG"
            git fetch origin $IMAGE_TAG
            git checkout $IMAGE_TAG
            echo "Using IMAGE_TAG=$IMAGE_TAG"
            cd ..
            cd deployment
            cd << parameters.root >>
            helmfile sync --environment << parameters.environment >>

  deployment-test:
    parameters:
      root:
        type: string
      imageTag:
        type: string
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Test Helmfile
          command: |
            echo "Helmfile tests passing"
            export IMAGE_TAG=<< parameters.imageTag >>
            git clone --no-checkout git@github.com:freeverseio/laos-apis.git
            cd laos-apis
            if [ "<< parameters.imageTag >>" = "latest" ]; then
              IMAGE_TAG=$(git rev-parse HEAD)
            fi
            echo "Fetching image tag $IMAGE_TAG"
            git fetch origin $IMAGE_TAG
            git checkout $IMAGE_TAG
            echo "Using IMAGE_TAG=$IMAGE_TAG"
            cd ..
            cd deployment
            cd << parameters.root >>
            helmfile lint
            echo "Deployment tests passed commit $IMAGE_TAG"


workflows:
  ci-workflow:
    jobs:
      - build-app:
          name: build-client-api
          image: freeverseio/laos-client-api
          root: laos-client-api
          context: dockerhub

      - build-app:
          name: build-api-gateway
          image: freeverseio/laos-api-gateway
          root: laos-api-gateway
          context: dockerhub

      - build-app:
          name: build-playground
          image: freeverseio/laos-graphql-playground
          root: graphql-playground
          context: dockerhub
      
      - build-app:
          name: build-indexer
          image: freeverseio/laos-indexer
          root: laos-indexer
          context: dockerhub

      - build-app:
          name: build-extensions
          image: freeverseio/laos-extensions
          root: laos-extentions
          context: dockerhubs
          
      - deployment-test:
          name: deployment-test-laos-node
          root: laos-node
          imageTag: << pipeline.parameters.imageTag >>

      - deployment-test:
          name: deployment-test-indexer
          root: indexer
          imageTag: << pipeline.parameters.imageTag >>

      - deployment-test:
          name: deployment-test-extentions
          root: laos-extentions
          imageTag: << pipeline.parameters.imageTag >>

      - approval:
          type: approval
          name: approve-deploy-apis
          requires:
            - deployment-test-laos-node
            - build-client-api
            - build-api-gateway
            - build-playground
            - build-extentions
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: approve-deploy-apis-staging
          requires:
            - deployment-test-laos-node
            - build-client-api
            - build-api-gateway
            - build-playground
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: approve-deploy-indexer
          requires:
            - deployment-test-indexer
            - build-indexer
          filters:
            branches:
              only:
                - main
      
      - approval:
          type: approval
          name: approve-deploy-indexer-staging
          requires:
            - deployment-test-indexer
            - build-indexer
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: approve-deploy-extentions
          requires:
            - deployment-test-extentions
            - build-extentions
          filters:
            branches:
              only:
                - main

      - deploy_to_cluster:
          name: deploy-to-dev-api
          requires:
            - deployment-test-laos-node
            - approve-deploy-client-api
          environment: development
          root: deployment
          imageTag: << pipeline.parameters.imageTag >>

      - deploy_to_cluster:
          name: deploy-to-dev-indexer
          requires:
            - deployment-test-indexer
            - approve-deploy-indexer
          environment: development
          root: deployment/indexer
          imageTag: << pipeline.parameters.imageTag >>


      - deploy_to_cluster:
          name: deploy-to-staging-api
          requires:
            - deployment-test-laos-node
            - approve-deploy-client-api-staging
          environment: staging
          root: deployment
          imageTag: << pipeline.parameters.imageTag >>

      - deploy_to_cluster:
          name: deploy-to-staging-indexer
          requires:
            - deployment-test-indexer
            - approve-deploy-indexer-staging
          environment: staging
          root: deployment/indexer
          imageTag: << pipeline.parameters.imageTag >>

      - deploy_to_cluster:
          name: deploy-to-staging-extentions
          requires:
            - deployment-test-extentions
            - approve-deploy-extentions
          environment: staging
          root: deployment
          imageTag: << pipeline.parameters.imageTag >>
